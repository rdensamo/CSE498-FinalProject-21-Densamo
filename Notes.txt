fdcl-gwu/uav_geometric_control
https://github.com/fdcl-gwu/uav_geometric_control/blob/master/python/scripts/sim_controller.py

Quadrotor Control, Path Planning and Trajectory Optimization

https://github.com/yrlu/quadrotor 
https://github.com/yrlu/quadrotor/blob/master/quadrotor_dynamics.pdf

Formation_Flight_Sim
https://github.com/heartxuxuxu/Formation_Flight_Sim

Following MEAM 620 Advanced Robotics course at University of Pennsylvania
https://github.com/yrlu/quadrotor
- Uses matlab, pd-control

Artificial-Potential-Field 
https://github.com/vampcoder/Artificial-Potential-Field 
http://www.cs.cmu.edu/~motionplanning/lecture/Ch, ap4-Potential-Field_howie.pdf 
- Does not use vector fields not a UAV 


Vector Field and Dubins Curves 
https://github.com/AlxndrJhn/Sampling_Path_Planning_VF_Curve_Tracking/blob/master/MAIN_CODE.ipynb
    Could use above for a simple pd position control -
    Do not think it actually uses a vector fields 
The example uses potential field not vector field because it is attracting and pulling sources 
--> cite this paper for their vector field : http://www.cpdee.ufmg.br/~gpereira/papers/tro2010.pdf

How do vector field Pathfinding algorithm work ?
https://www.youtube.com/watch?v=ZJZu3zLMYAc


**Algorithm to calculate trajectories from vector field
https://softwareengineering.stackexchange.com/questions/164175/algorithm-to-calculate-trajectories-from-vector-field
    **Runge-Kutta methods can be used to calculate trajectories from a vector field 

Vector field trajectory tracking control for wheeled mobile robots
https://app.luminpdf.com/viewer/609b3aee3cd00a0012601871
https://www.researchgate.net/publication/251885529_Vector_field_trajectory_tracking_control_for_wheeled_mobile_robots

Vector Field Trajectory Tracking Control for
Wheeled Mobile Robots Paper: 
I had previously been wondering what the difference between a vector field and potential field are : 
    However, the vector fields simply indicate a desired
    direction and thus the vector field is different from potential
    field in that they do not represent the gradient of a potential
    field [6] 
    
Differential Flatness Paper : 
In the Differential flatness they used a 
they use endogenous transformation for quadrotor dynamics with modifications together in low level SE(3) controller for 
***
Require that up to third order spatial derivatives can be computed from the vector field description (for acceleration, jerk, and snap). From these derivatives we find the state of the quadrotor to achieve the velocity required by the vector field, and then control the quadrotor to that state with the low-level SE(3) controller. T
***
Many control and planning techniques give an output
in the form of a vector ﬁeld along which the robot is
intended to move. For example, navigation, obstacle avoid-
ance, collision avoidance, swarming and ﬂocking, and mobile
network connectivity maintenance controllers often give a
vector ﬁeld for the robot or robots to follow to accomplish
the desired task. This is effective for robots moving in
a pseudo-static regime in which dynamics do not play a
major role in the motion, for example ground robots with
signiﬁcant gear reduction, or slow moving aerial robots.
However, in a dynamic regime in which inertial effects
cannot be neglected, it is challenging to control a robot along
an arbitrary vector ﬁeld. Speciﬁcally, quadrotor helicopters
have high dimensional, nonlinear dynamics to contend with,
so algorithms that give a vector ﬁeld are of questionable

A. Differential Flatness
Differential ﬂatness is a property of some nonlinear control
systems that allows the state vector and the input vector
to be written in terms of a smaller number of, so called,
ﬂat outputs, and some number of time derivatives of those
outputs. The function that maps from the outputs and their
time derivatives to the states and inputs is known as the
endogenous transformation [12]. Quadrotor dynamics are
known to be differentially ﬂat. This is typically useful
in trajectory planning, because a desired trajectory in the
ﬂat outputs can be used to analytically ﬁnd the open-loop

Dynamically Feasible Motion Planning through Partial Differential Flatness Paper


Dubins-Curves
# https://github.com/AndrewWalker/Dubins-Curves

Issue installing Dubins in python
https://stackoverflow.com/questions/64816523/pip-install-dubins-gives-multiple-errors

Integration Algorithm: 4th Order Runge Kutta

Algorithm to calculate trajectories from vector field
https://softwareengineering.stackexchange.com/questions/164175/algorithm-to-calculate-trajectories-from-vector-field